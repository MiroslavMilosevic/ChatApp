{"version":3,"sources":["u&p/users.js","components/Login.js","components/LogOut.js","components/Home.js","services/axios.js","functions/textValidation.js","components/Chat.js","components/GoToLogin.js","App.js","serviceWorker.js","index.js"],"names":["usersArrayImported","id","username","password","Login","usersArray","setUser","useState","setUsername","setPassword","myHistory","useHistory","useEffect","className","type","placeholder","value","onChange","e","target","onClick","console","log","isSuccessful","forEach","element","trim","localStorage","setItem","toString","getItem","isLoged","setTimeout","push","alert","LogOut","history","Home","filter","el","Number","map","to","uuid","getUserMessages","axios","get","postRedZaUpis","broj","post","isMessageCorrect","message","length","includes","Chat","setUserApp","useParams","user","nizPoruka","setNizPoruka","porukePrijatelja","setPorukePrijatelja","zajednickePoruke","setZajednickePoruke","inputPoruka","setInputPoruka","imePrijatelja","setImePrijatelja","window","onbeforeunload","elem","document","getElementById","scrollTop","scrollHeight","find","getRedZaUpis","then","res","data","tmp","split","idPoslao","poruka","date","Date","parse","stringDate","interval1","setInterval","clearInterval","sendMessage","idUsera","redZaUpis","postMessage","onKeyPress","event","key","sort","a","b","GoToLogin","App","setUsersArray","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.91cb4534.chunk.js","sourcesContent":["export let usersArrayImported=[\r\n{id:1, username:'milancemkc', password:'mkc'},\r\n{id:2, username:'jocara10', password:'spartacus'},\r\n{id:3, username:'pekula96', password:'kockazenepice'},\r\n{id:4, username:'suka99', password:'ooomajstore'},\r\n{id:5, username:'pero96', password:'mojpero'}\r\n]","import React, { useState, useEffect} from 'react'\r\n// import { BrowserRouter as Router, Link, Redirect,  useHistory } from 'react-router-dom'\r\nimport { BrowserRouter as Redirect,  useHistory } from 'react-router-dom'\r\nimport '../services/style.css'\r\nexport default function Login({usersArray,setUser}) {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const myHistory= useHistory();\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className='inputWraper'>         \r\n            <input className='inputUsername inputLogin' type='text' placeholder='username' value={username}  onChange={(e)=>{setUsername(e.target.value)}}/>\r\n            <input className='inputPassword inputLogin' type='password' placeholder='password' value={password}  onChange={(e)=>{setPassword(e.target.value)}}/>\r\n            </div>\r\n            <button className='ulogujSeBtn' onClick={\r\n                ()=>{console.log(username, password)\r\n                    let isSuccessful=false;\r\n                   usersArray.forEach(element => {\r\n                       if(element.username===username.trim() && element.password===password.trim()){\r\n                           console.log('uspesno');\r\n                           isSuccessful=true;\r\n                           localStorage.setItem('id', element.id.toString())\r\n                           localStorage.setItem('username', element.username)\r\n                           localStorage.setItem('password', element.password)\r\n                           localStorage.setItem('isLoged', 'true')\r\n                           setUser(\r\n                            {id:localStorage.getItem('id'), username:localStorage.getItem('username'),\r\n                             password:localStorage.getItem('password'), isLoged:true}\r\n                            )\r\n                    \r\n                        //  console.log(localStorage.getItem('username'))\r\n                        //  console.log(   localStorage.getItem('password'))\r\n                        //  console.log(   localStorage.getItem('id'))\r\n                         setTimeout(() => {\r\n                             myHistory.push('home')\r\n                         }, 150);\r\n                      \r\n                       }\r\n                   });\r\n                if(!isSuccessful){\r\n                    console.log('neuspesno');\r\n                    alert('Uneti username ili password nisu ispravni')\r\n                }\r\n                      \r\n            }\r\n            }>Uloguj se</button>\r\n            <button className='noneDisplay' onClick={()=>{\r\n                localStorage.setItem('username', null)\r\n                localStorage.setItem('password', null)\r\n                localStorage.setItem('id', null)\r\n                localStorage.setItem('isLoged', null)\r\n                setUser(\r\n                    { id:localStorage.getItem('id'), username:localStorage.getItem('username'),\r\n                     password:localStorage.getItem('password'), isLoged:null }\r\n                    )\r\n        \r\n            }}>Set to null</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { BrowserRouter as Router, Link, Redirect,  useHistory } from 'react-router-dom'\r\nimport { BrowserRouter as Redirect,  useHistory } from 'react-router-dom'\r\nexport default function LogOut({setUser}) {\r\n    const history = useHistory();\r\n    const logOutFnk =()=>{\r\n        localStorage.setItem('username', null)\r\n        localStorage.setItem('password', null)\r\n        localStorage.setItem('id', null)\r\n        localStorage.setItem('isLoged', null)\r\n        setUser(\r\n            { id:null, username:null,\r\n             password:null, isLoged:null }\r\n            )\r\n            history.push('/login')\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <button className='logOutBtn' onClick={()=>{\r\n                     logOutFnk()\r\n\r\n            }}>LogOut</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { v1 as uuid } from 'uuid'\r\n import { BrowserRouter as Router, Link } from 'react-router-dom'\r\n//import { BrowserRouter as Link } from 'react-router-dom'\r\nimport LogOut from './LogOut'\r\n\r\nexport default function Home({ usersArray,setUser }) {\r\n   // const [isLoged, setIsLoged] = useState(localStorage.getItem('isLoged'));\r\n   // const [userLocal, setUserLocal] = useState({});\r\n\r\n    useEffect(() => {\r\n        setUser(\r\n            { id: localStorage.getItem('id'), username: localStorage.getItem('username'), password: localStorage.getItem('password'), isLoged:localStorage.getItem('isLoged')}\r\n        )\r\n     //   setIsLoged(localStorage.getItem('isLoged'));\r\n   \r\n    },[])\r\n\r\n\r\n    return (\r\n        \r\n        <div className='homeWraper'>\r\n            <LogOut setUser={setUser}/>\r\n             <h1>Home</h1>\r\n              <> <button className='noneDisplay' onClick={() => { console.log(localStorage.getItem('isLoged')) }}>DUGME</button>\r\n               <div className='homeSpanWraper'> \r\n               {usersArray.filter(el=>{return el.id!==Number(localStorage.getItem('id')) })\r\n               .map(el => <span className='chatsHomeSpan' key={uuid()}>Idi na Chat sa: <Link key={uuid()} to={`chat/${el.id}`}  >{el.username}</Link> </span>)} \r\n\r\n\r\n               </div> </> \r\n        </div>    \r\n   \r\n      \r\n        )\r\n}\r\n","import axios from 'axios'\r\nexport const getUserMessages=(id)=>{\r\n\r\n   return axios.get(`https://script.google.com/macros/s/AKfycbyaPSgO1KOnrE1vPswfyrByQwhcMtJH5t8VfErd_pc3viSAkU4/exec?id=${id+1}`)\r\n}\r\n\r\nexport const postMessage2=(inputPoruka, idUsera, idPoslao, redZaUpis)=>{\r\n\r\n    axios.post(`https://script.google.com/macros/s/AKfycbyaPSgO1KOnrE1vPswfyrByQwhcMtJH5t8VfErd_pc3viSAkU4/exec`)\r\n }\r\n\r\n export const postMessage=(inputPoruka, idUsera, idPoslao, redZaUpis)=>{\r\n\r\n   axios.post(`https://script.google.com/macros/s/AKfycbyaPSgO1KOnrE1vPswfyrByQwhcMtJH5t8VfErd_pc3viSAkU4/exec?poruka=${inputPoruka}&id=${idUsera}&idPoslao=${idPoslao}&redZaUpis=${redZaUpis}`)\r\n}\r\n \r\n\r\n export const getRedZaUpis=(id)=>{\r\n\r\n   return axios.get(`https://script.google.com/macros/s/AKfycbySS5xyOi8U9KApKftx72Hm5Uy0FcOt3mG6zWKKQ-Ti9OBIhj8/exec?id=${id}`)\r\n }\r\n\r\n export const postRedZaUpis=(id, broj)=>{\r\n\r\n  return axios.post(`https://script.google.com/macros/s/AKfycbySS5xyOi8U9KApKftx72Hm5Uy0FcOt3mG6zWKKQ-Ti9OBIhj8/exec?id=${id}&broj=${broj}`)\r\n}\r\n","\r\n\r\nexport function isMessageCorrect(message){\r\n\r\nif(message.length<=200&&message.length>0&&!message.includes(';')){\r\n    return [true,'poruka odgovara formatu']\r\n}else if(message.length>200){\r\n    return [false, 'poruka ima preko 200 karaktera ']\r\n}else if(message.length<=0){\r\n    return [false, 'ne mozete poslati praznu poruku']\r\n}else if(message.includes(';')){\r\n    return [false, 'zabranjeno je koristiti neki od karatera iz vase poruke']\r\n}\r\n\r\n}","import React, { useEffect, useState, } from 'react';\r\nimport { BrowserRouter as Redirect, useParams } from 'react-router-dom'\r\nimport { getUserMessages, postMessage, postRedZaUpis, getRedZaUpis } from '../services/axios'\r\nimport { v1 as uuid } from 'uuid'\r\nimport { usersArrayImported, } from '../u&p/users'\r\nimport { isMessageCorrect } from '../functions/textValidation'\r\nimport LogOut from './LogOut';\r\n\r\nexport default function Chat({ setUserApp, }) {\r\n\r\n    const [id] = useState(useParams().id);\r\n    const [user] = useState({ id: localStorage.getItem('id'), username: localStorage.getItem('username'), password: localStorage.getItem('password'), isLoged: localStorage.getItem('isLoged') });\r\n    const [nizPoruka, setNizPoruka] = useState([]);\r\n    const [porukePrijatelja, setPorukePrijatelja] = useState([]);\r\n    const [zajednickePoruke, setZajednickePoruke] = useState([]);\r\n    const [inputPoruka, setInputPoruka] = useState('');\r\n    const [imePrijatelja, setImePrijatelja] = useState('');\r\n\r\n    window.onbeforeunload = () => {\r\n        postRedZaUpis(user.id, Number(localStorage.getItem('redZaUpis')));\r\n    }\r\n    useEffect(() => {\r\n          setTimeout(() => {\r\n            let elem = document.getElementById('scrollDiv');\r\n            elem.scrollTop = elem.scrollHeight;\r\n            console.log('scrool');\r\n          }, 2000);\r\n\r\n        setImePrijatelja(usersArrayImported.find(el => el.id === Number(id)).username)\r\n\r\n        getRedZaUpis(user.id).then(res => {\r\n            console.log(res.data);\r\n            localStorage.setItem('redZaUpis', res.data);\r\n        })\r\n        getUserMessages(Number(id)).then(res => {\r\n            let tmp = res.data.map(el => {\r\n                return {\r\n                    id: el.split(';')[0], idPoslao: el.split(';')[1],\r\n                    poruka: el.split(';')[2], date: Date.parse(el.split(';')[3]), stringDate: el.split(';')[3]\r\n                }\r\n            })\r\n            setPorukePrijatelja(tmp);\r\n        })\r\n        getUserMessages(Number(user.id)).then(res => {\r\n            let tmp = res.data.map(el => {\r\n                return {\r\n                    id: el.split(';')[0], idPoslao: el.split(';')[1],\r\n                    poruka: el.split(';')[2], date: Date.parse(el.split(';')[3]), stringDate: el.split(';')[3]\r\n                }\r\n            })\r\n            console.log(tmp);\r\n            setNizPoruka(tmp);\r\n        })\r\n        let interval1 = setInterval(() => {\r\n            getUserMessages(Number(id)).then(res => {\r\n                let tmp = res.data.map(el => {\r\n                    return {\r\n                        id: el.split(';')[0], idPoslao: el.split(';')[1],\r\n                        poruka: el.split(';')[2], date: Date.parse(el.split(';')[3]), stringDate: el.split(';')[3]\r\n                    }\r\n                })\r\n                setPorukePrijatelja(tmp);\r\n            })\r\n        }, 2000);\r\n\r\n        return function () {\r\n           // clearInterval(windowInterval)\r\n            clearInterval(interval1);\r\n            console.log('odjavaaaaaaaaaa' + localStorage.getItem('redZaUpis'));\r\n            postRedZaUpis(user.id, Number(localStorage.getItem('redZaUpis')))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let tmp = [];\r\n        if (user.id !== id) {\r\n            tmp = [...porukePrijatelja.filter(el => el.idPoslao === user.id), ...nizPoruka.filter(el => el.idPoslao === id)];\r\n        } else {\r\n            tmp = [...nizPoruka.filter(el => el.idPoslao === user.id)];\r\n        }\r\n        setZajednickePoruke(tmp);\r\n        console.log(zajednickePoruke);\r\n  \r\n        // if(nizPoruka.length>=11){\r\n        //    let tmp=[...nizPoruka];\r\n        //    tmp.shift()\r\n        //    setNizPoruka(tmp)\r\n        //    }\r\n    }, [porukePrijatelja, nizPoruka])\r\n\r\n    useEffect(() => {\r\n        \r\n        let elem = document.getElementById('scrollDiv');\r\n        elem.scrollTop = elem.scrollHeight;\r\n        console.log('scrool');\r\n   \r\n    }, [nizPoruka])\r\n\r\n    const sendMessage = () => {\r\n\r\n        if (isMessageCorrect(inputPoruka)[0]&&Number(localStorage.getItem('redZaUpis'))<150) {\r\n            //  localStorage.setItem('redZaUpis' , Number(localStorage.getItem('redZaUpis'))+1)\r\n            postMessage(inputPoruka, user.id, id, localStorage.getItem('redZaUpis'));\r\n            localStorage.setItem('redZaUpis', Number(localStorage.getItem('redZaUpis')) + 1)\r\n            let tmp = [...nizPoruka];\r\n            tmp.push({ id: user.id, idPoslao: id, poruka: inputPoruka, date: Date.parse(new Date().toString()), stringDate: (new Date).toString() });\r\n            // if(Number(localStorage.getItem('redZaUpis'))>=10){ \r\n            //     localStorage.setItem('redZaUpis','0')\r\n\r\n\r\n            //    }\r\n            //    if(nizPoruka.length>=10){\r\n            //     tmp.shift();\r\n            //    }\r\n\r\n            //    console.log(nizPoruka.length + 'ovo je duzina niza poruka');\r\n            console.log(localStorage.getItem('redZaUpis') + 'ovo red za upis');\r\n\r\n            setNizPoruka(tmp);\r\n            setInputPoruka('');\r\n\r\n            // let elem = document.getElementById('scrollDiv');\r\n            // elem.scrollTop = elem.scrollHeight;\r\n            // console.log('scrool');\r\n\r\n        } else {\r\n            alert(isMessageCorrect(inputPoruka)[1])\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='bigChatWraper'>\r\n\r\n            <button className='noneDisplay' onClick={() => {\r\n\r\n                console.log(localStorage.getItem('redZaUpis'));\r\n            }}>DUGME</button>\r\n            <LogOut setUser={setUserApp} />\r\n            <h1>{'Chat sa korisnikom: '}</h1>\r\n            <h2>{imePrijatelja}</h2>\r\n            <input className='porukaInput' type='text' value={inputPoruka} placeholder='poruka...' onChange={(e) => { setInputPoruka(e.target.value) }} onKeyPress={(event) => {\r\n                if (event.key === 'Enter') {\r\n                    sendMessage()\r\n                    //     if(isMessageCorrect(inputPoruka)[0]){\r\n                    //  //  localStorage.setItem('redZaUpis' , Number(localStorage.getItem('redZaUpis'))+1)\r\n                    //    postMessage(inputPoruka, user.id, id, localStorage.getItem('redZaUpis'));\r\n                    //    localStorage.setItem('redZaUpis' , Number(localStorage.getItem('redZaUpis'))+1)\r\n                    //    let tmp=[...nizPoruka];\r\n                    //    tmp.push( { id: user.id,idPoslao:id, poruka:inputPoruka,   date:Date.parse(new Date().toString()), stringDate:(new Date).toString() } );\r\n                    //    setNizPoruka(tmp);\r\n\r\n                    //     setInputPoruka('');\r\n\r\n\r\n                    //     }else{\r\n                    //        alert(isMessageCorrect(inputPoruka)[1])\r\n                    //     }\r\n                }\r\n\r\n            }} />\r\n            <div className='chatWraper' id='scrollDiv'>\r\n                {zajednickePoruke.sort((a, b) => a.date - b.date)\r\n\r\n                    .map(el => {\r\n                        return el.id === user.id ? (<div className='mojaPorukaDiv' key={uuid()}><div className='mojSpan' key={uuid()}>{el.poruka}</div><div className='divBtn noneDisplay'><button className='obrisiBtn'>Obrisi</button></div></div>) :\r\n                            (<div className='njegovaPorukaDiv' key={uuid()}><div className='njegovSpan' key={uuid()}>{el.poruka}</div></div>)\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Redirect,  useHistory } from 'react-router-dom'\r\n\r\nexport default function GoToLogin() {\r\n    const myHistory = useHistory();\r\n    return (\r\n        <button className='goToLoginBtn' onClick={()=>{\r\n            setTimeout(() => {\r\n                myHistory.push('login')\r\n            }, 150);\r\n        }}>\r\n            Idi na Login Stranicu\r\n        </button>\r\n    )\r\n}\r\n","// import {Router as Router, Switch, Route, } from 'react-router-dom'\nimport {Router as Router, Switch, Route, } from 'react-router-dom'\nimport { HashRouter,} from \"react-router-dom\";\nimport React, { useEffect, useState, } from 'react';\nimport './App.css';\nimport { usersArrayImported, } from './u&p/users'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Chat from './components/Chat'\nimport GoToLogin from './components/GoToLogin'\nimport './services/style.css'\n\nfunction App() {\n // const [nizPoruka, setNizPoruka] = useState([]);\n\n\n  const [usersArray, setUsersArray] = useState([]);\n  const [user, setUser] = useState(  {id:localStorage.getItem('id'), username:localStorage.getItem('username'),\n   password:localStorage.getItem('password'), isLoged:localStorage.getItem('isLoged')});\n\n  useEffect(() => {\n    setUser(\n      {id:localStorage.getItem('id'), username:localStorage.getItem('username'), password:localStorage.getItem('password'), isLoged:localStorage.getItem('isLoged')}\n      )\n    setUsersArray(usersArrayImported)\n    \n    // getUserMessages(1).then(res => {\n    //   let tmp = res.data.map(el => { return { id: el.split(';')[0], poruka: el.split(';')[1], date: el.split(';')[2] } })\n    //   console.log(tmp);\n    //   setNizPoruka(tmp);\n  \n    // })//////sve ispod je setInterval ////////////////////////////////////////////////////// obrati paznju\n    // setInterval(() => {\n    //   getUsersArray().then(res => {\n    //     let tmp = res.data.map(el => { return { id: el.split(';')[0], poruka: el.split(';')[1], date: el.split(';')[2] } })\n    //     setNizPoruka(tmp);\n    //   })\n    // }, 1200);\n  }, [])\n\n  // useEffect(()=>{\n  //   console.log(nizPoruka);\n  //   //console.log(user);\n  // },[nizPoruka])\n\n\n\n  return (\n    <div className=\"App\">\n  \n      {/* <Link to={`/one/${el.id}`}>Detalji</Link> */}\n\n      <HashRouter>\n\n        <Switch>\n\n          <Route exact path=\"/home\">\n         \n       { user.isLoged!=='null'&&user.isLoged!==null ?  <Home usersArray={usersArray} setUser={setUser} /> : \n       <><p className='nisiUlogovanParagraf'>nisi ulogovan</p><GoToLogin/></> } \n      \n\n          </Route>\n          <Route exact path=\"/\">\n          <div className='loginWraper'>\n          <h1 className='loginHeder'>Login</h1>\n          {  <Login usersArray={usersArray}  setUser={setUser}/> }\n              </div>\n      \n\n          </Route>\n          <Route exact path=\"/login\">\n            <div className='loginWraper'>\n          <h1 className='loginHeder'>Login</h1>\n          {  <Login usersArray={usersArray}  setUser={setUser}/> }\n              </div>\n          </Route>\n          <Route exact path=\"/register\">\n          <h1>register</h1>\n          </Route>\n          <Route exact path=\"/chat/:id\">\n      \n          { user.isLoged!=='null'&&user.isLoged!==null ?  <Chat setUserApp={setUser}  />: <p>nisi ulogovan</p> } \n            {/* {localStorage.getItem('user')=== ''? <ParagrafS2>Niste Ulogovani</ParagrafS2> : <Club niz={niz} setNiz={setNiz}></Club>} */}\n          </Route>\n        </Switch>\n\n      </HashRouter>\n\n    </div>\n  );\n}\n//https://docs.google.com/spreadsheets/d/1NeY3gcMAzC-iany4HwYZULSRdkxYA7NoLB1aI1-_kfc/edit?usp=sharing\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}